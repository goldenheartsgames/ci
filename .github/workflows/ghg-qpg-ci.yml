name: QPG CI/CD

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
  workflow_call:
    inputs:
      gameName:
        required: true
        type: string
      useTPBundling:
        required: false
        type: boolean
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: abhilash1in/aws-secrets-manager-action@v2.1.0
        with:
          secrets: |
            DEV_QPG_CONFIG
          parse-json: true
      - name: Tell me what my texture key is
        run: |
          echo "Hello!!! ${{ DEv_TEXTURE_PACKER_KEY }}"
#  checkout:
#    runs-on: ubuntu-latest
#    env:
#      WORKING_PATH: /home/runner/work
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ${{ inputs.gameName }}
#          path: ${{ env.WORKING_PATH }}/${{ inputs.gameName }}/${{ inputs.gameName }}/
#  buildAtlas:
#    runs-on: ubuntu-latest
#    needs: [checkout]
#    if: ${{ inputs.useTPBundling != '' }}
#    env:
#      WORKING_PATH: /home/runner/work
#    steps:
#      - uses: actions/download-artifact@v3
#        with:
#          name: ${{ inputs.gameName }}
#          path: ${{ env.WORKING_PATH }}/${{ inputs.gameName }}/
#      - name: Install TP and dependencies
#        run: |
#          sudo apt-get update
#          curl --output /tmp/tp.deb https://www.codeandweb.com/download/texturepacker/6.0.2/TexturePacker-6.0.2.deb
#          sudo apt-get -y install libegl1-mesa libgl1-mesa-glx libfontconfig libx11-6 libxkbcommon-x11-0 /tmp/tp.deb
#          echo agree | TexturePacker --version
#          TexturePacker --activate-license ${{ secrets.TEXTURE_PACKER_KEY }} ${{ env.WORKING_PATH }}/${{ inputs.gameName }}/raw_assets/texturePacker.tps
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ${{ inputs.gameName }}
#          path: ${{ env.WORKING_PATH }}/${{ inputs.gameName }}/
#  buildProject:
#    runs-on: ubuntu-latest
#    needs: [checkout, buildAtlas]
#    steps:
#      - uses: actions/download-artifact@v3
#        id: download
#        with:
#          name: ${{ inputs.gameName }}
#          path: ${{ env.WORKING_PATH }}
#
#      - name: Install dependencies
#        working-directory: ${{ steps.download.outputs.download-path }}
#        run: npm i
#
#      - name: Build
#        run: npm run build
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Deploy game
#        run: aws s3 sync dist s3://${{ secrets.GHG_DEV_URL }}/${{ inputs.gameName }} --delete
#
#      - name: Invalidate dashboard cloudfront
#        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CF_DIST_ID }} --paths "/${{ inputs.gameName }}/*"
#  cleanup:
#    runs-on: ubuntu-latest
#    needs: [buildProject]
#    steps:
#      - uses: geekyeggo/delete-artifact@v1
#        with:
#          name: ${{ inputs.gameName }}