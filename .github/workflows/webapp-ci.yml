name: WebApp CI/CD

on:
  push:
    branches: [ develop, qa1, qa2, staging ]
  workflow_dispatch:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      SLACK_WEBHOOK:
        required: true
      NODE_AUTH_TOKEN:
        required: true

jobs:
  checkoutAndBuild:
    runs-on: ubuntu-latest
    env:
      WORKING_PATH: /home/runner/work
    steps:
      - uses: actions/checkout@v3
      - name: Generate a buildtime
        run: |
          APP_CONFIG_PATH="${GITHUB_WORKSPACE}/src/app/app-config.module.ts"
          echo $APP_CONFIG_PATH
          SED_SEARCH_STRING="BUILD_DATE_TIME"
          ISO8601_OFFSET_REGEX="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[\+-][0-9]{4}"
          ISO8601_DATETIME_UTC=$(date -u +%Y-%m-%dT%H:%M:%S%z)
          ISO8601_DATETIME_UTC_OFFSET=$(echo $ISO8601_DATETIME_UTC | perl -pe "s/\+0000/\-0500/g")

          if grep -Fq "$SED_SEARCH_STRING" $APP_CONFIG_PATH
          then
              echo "Created new buildtime"
              perl -pi -e "s/BUILD_DATE_TIME/$ISO8601_DATETIME_UTC_OFFSET/g" $APP_CONFIG_PATH
          else
              echo "Modified build datetime"
              perl -pi -e "s/$ISO8601_OFFSET_REGEX/$ISO8601_DATETIME_UTC_OFFSET/g" $APP_CONFIG_PATH
          fi
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci --force
      - run: node --max_old_space_size=2048 ${GITHUB_WORKSPACE}/node_modules/@angular/cli/bin/ng build --configuration production --aot=true --buildOptimizer=true --output-hashing=all --crossOrigin=use-credentials --output-path=./dist
      - uses: actions/upload-artifact@v3
        with:
          name: webapp
          path: ./dist
  deployment:
    runs-on: ubuntu-latest
    needs: [ checkoutAndBuild ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: webapp
          path: $GITHUB_WORKSPACE/dist

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set Webapp Key
        run: |
          case "${GITHUB_REF##*/}" in
            "develop")
              webappKey="DEV_WEBAPP_CONFIG"
              webappPrefix="DEV_"
            ;;
            "qa")
              webappKey="QA2_WEBAPP_CONFIG"
              webappPrefix="QA2_"
            ;;          
            "qa1")
              webappKey="QA1_WEBAPP_CONFIG"
              webappPrefix="QA1_"
            ;;
            "qa2")
              webappKey="QA2_WEBAPP_CONFIG"
              webappPrefix="QA2_"
            ;;
            "staging")
              webappKey="STAGING_WEBAPP_CONFIG"
              webappPrefix="STAGING_"
            ;;
          esac
          echo "WEBAPP_KEY=$(echo $webappKey)" >> $GITHUB_ENV
          echo "WEBAPP_PREFIX=$(echo $webappPrefix)" >> $GITHUB_ENV

      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: abhilash1in/aws-secrets-manager-action@v2.1.0
        with:
          secrets: ${{ env.WEBAPP_KEY }}
          parse-json: true

      - name: Convert variables
        run: |
          echo "TEST KEY " . $webappKey
          echo "TEST PREFIX " . $webappPrefix
          readarray -t vars < <(compgen -A variable)
          declare -p vars
          echo $vars
          for item in "${vars[@]}"
          do
              if  [[ $item == $WEBAPP_PREFIX* ]];
              then
                var=${item/$WEBAPP_PREFIX/}
                echo "${var}=$(echo "${!item}")" >> $GITHUB_ENV
                  echo "key: " . $item
              fi
          done

      - name: TEST
        run: aws s3 sync dist s3://${QPG_CONFIG_QPG_GHG_QPG_URL}/${{ inputs.gameName }} --delete
  cleanup:
    runs-on: ubuntu-latest
    needs: [checkoutAndBuild, deployment]
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: webapp